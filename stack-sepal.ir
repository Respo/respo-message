{:definitions {"respo-message.comp.msg-list/comp-msg-list" ["def" "comp-msg-list" ["create-comp" ":msg-list" "render"]], "respo-message.main/store-ref" ["defonce" "store-ref" ["atom" ["{}" [":messages" ["[]"]]]]], "respo-message.comp.msg-list/render" ["defn" "render" ["messages"] ["fn" ["state" "mutate!"] ["div" ["{}"] ["->>" "messages" ["map-indexed" ["fn" ["idx" "message"] ["[]" "idx" ["comp-message" "idx" "message"]]]]]]]], "respo-message.main/id-ref" ["def" "id-ref" ["atom" "0"]], "respo-message.main/on-jsload!" ["defn" "on-jsload!" [] ["clear-cache!"] ["render-app!"] ["println" "|code update."]], "respo-message.main/-main!" ["defn" "-main!" [] ["enable-console-print!"] ["render-app!"] ["add-watch" "store-ref" ":changes" "render-app!"] ["add-watch" "states-ref" ":changes" "render-app!"] ["println" "|app started!"]], "respo-message.main/render-app!" ["defn" "render-app!" [] ["let" [["target" [".querySelector" "js/document" "|#app"]]] ["render!" ["comp-container" "@store-ref"] "target" "dispatch!" "states-ref"]]], "respo-message.main/id!" ["defn" "id!" [] ["swap!" "id-ref" "inc"] "@id-ref"], "respo-message.comp.container/comp-container" ["def" "comp-container" ["create-comp" ":container" "render"]], "respo-message.comp.container/on-add" ["defn" "on-add" ["e" "dispatch!"] ["dispatch!" ":message/add" "|demo"]], "respo-message.main/dispatch!" ["defn" "dispatch!" ["op" "op-data"] ["let" [["id" ["id!"]] ["new-store" ["case" "op" [":message/add" ["update" "@store-ref" ":messages" ["fn" ["messages"] ["conj" "messages" ["{}" [":id" "id"] [":text" "op-data"] [":kind" ":attractive"]]]]]] "@store-ref"]]] ["reset!" "store-ref" "new-store"]]], "respo-message.comp.message/comp-message" ["def" "comp-message" ["create-comp" ":message" "render"]], "respo-message.main/states-ref" ["defonce" "states-ref" ["atom" ["{}"]]], "respo-message.comp.message/render" ["defn" "render" ["idx" "message"] ["fn" ["state" "mutate!"] ["div" ["{}"] ["comp-text" ["pr-str" "message"] "nil"]]]], "respo-message.comp.container/render" ["defn" "render" ["store"] ["fn" ["state" "mutate!"] ["div" ["{}" [":style" ["merge" "ui/global"]]] ["div" ["{}" [":style" "ui/button"] [":event" ["{}" [":click" "on-add"]]]] ["comp-text" "|add message" "nil"]] ["comp-text" ["pr-str" "store"] "nil"] ["comp-msg-list" [":messages" "store"]]]]]}, :namespaces {"respo-message.comp.container" ["ns" "respo-message.comp.container" [":require" ["[]" "hsl.core" ":refer" ["[]" "hsl"]] ["[]" "respo-ui.style" ":as" "ui"] ["[]" "respo.alias" ":refer" ["[]" "create-comp" "div" "span"]] ["[]" "respo.comp.space" ":refer" ["[]" "comp-space"]] ["[]" "respo.comp.text" ":refer" ["[]" "comp-text"]] ["[]" "respo-message.comp.msg-list" ":refer" ["[]" "comp-msg-list"]]]], "respo-message.main" ["ns" "respo-message.main" [":require" ["[]" "respo.core" ":refer" ["[]" "render!" "clear-cache!"]] ["[]" "respo-message.comp.container" ":refer" ["[]" "comp-container"]] ["[]" "cljs.reader" ":refer" ["[]" "read-string"]]]], "respo-message.comp.message" ["ns" "respo-message.comp.message" [":require" ["[]" "respo.alias" ":refer" ["[]" "create-comp" "div"]] ["[]" "respo.comp.text" ":refer" ["[]" "comp-text"]]]], "respo-message.comp.msg-list" ["ns" "respo-message.comp.msg-list" [":require" ["[]" "respo.alias" ":refer" ["[]" "create-comp" "div"]] ["[]" "respo-message.comp.message" ":refer" ["[]" "comp-message"]]]]}, :procedures {"respo-message.main" [["set!" [".-onload" "js/window"] "-main!"]], "respo-message.comp.message" [], "respo-message.comp.msg-list" []}}